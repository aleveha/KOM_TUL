{"ast":null,"code":"var _jsxFileName = \"/Users/aleveha/WebstormProjects/KOM_TUL/kom_tul/src/components/MainContent/AllNews.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport News from \"../Common/News\";\nimport moment from \"moment\";\n\nconst AllNews = () => {\n  _s();\n\n  const [news, setNews] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    getAllNews();\n  }, []);\n\n  const getAllNews = () => {\n    setTimeout(() => {\n      fetch('http://localhost:3000/allNews').then(response => {\n        return response.json();\n      }).then(data => {\n        setNews(data.map(row => {\n          return {\n            id: row.id,\n            date: moment(row.date).format('DD.MM.YYYY'),\n            name: row.name,\n            content: row.content\n          };\n        }));\n        setIsLoading(false);\n      });\n    }, 3000);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"padding\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"mainLabel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, \"Novinky\"), /*#__PURE__*/React.createElement(News, {\n    news: news,\n    isLoading: isLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }));\n};\n\n_s(AllNews, \"4kuymrl1OoUkHJbIYZCODUAtIUQ=\");\n\n_c = AllNews;\nexport default AllNews;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllNews\");","map":{"version":3,"sources":["/Users/aleveha/WebstormProjects/KOM_TUL/kom_tul/src/components/MainContent/AllNews.tsx"],"names":["React","useEffect","useState","News","moment","AllNews","news","setNews","isLoading","setIsLoading","getAllNews","setTimeout","fetch","then","response","json","data","map","row","id","date","format","name","content"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,IAAP,MAA0B,gBAA1B;AACA,OAAOC,MAAP,MAAmB,QAAnB;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAClB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAe,EAAf,CAAhC;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAU,IAAV,CAA1C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,UAAU;AACb,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,UAAU,GAAG,MAAM;AACrBC,IAAAA,UAAU,CAAC,MAAM;AACbC,MAAAA,KAAK,CAAC,+BAAD,CAAL,CACKC,IADL,CACUC,QAAQ,IAAI;AACd,eAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,OAHL,EAIKF,IAJL,CAIUG,IAAI,IAAI;AACVT,QAAAA,OAAO,CACHS,IAAI,CAACC,GAAL,CAAUC,GAAD,IAAgB;AACrB,iBAAO;AACHC,YAAAA,EAAE,EAAED,GAAG,CAACC,EADL;AAEHC,YAAAA,IAAI,EAAEhB,MAAM,CAACc,GAAG,CAACE,IAAL,CAAN,CAAiBC,MAAjB,CAAwB,YAAxB,CAFH;AAGHC,YAAAA,IAAI,EAAEJ,GAAG,CAACI,IAHP;AAIHC,YAAAA,OAAO,EAAEL,GAAG,CAACK;AAJV,WAAP;AAMH,SAPD,CADG,CAAP;AAUAd,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,OAhBL;AAiBH,KAlBS,EAkBP,IAlBO,CAAV;AAoBH,GArBD;;AAuBA,sBACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAEH,IAAZ;AAAkB,IAAA,SAAS,EAAEE,SAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAMH,CArCD;;GAAMH,O;;KAAAA,O;AAuCN,eAAeA,OAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport News, {INews} from \"../Common/News\";\nimport moment from \"moment\";\n\nconst AllNews = () => {\n    const [news, setNews] = useState<Array<INews>>([]);\n    const [isLoading, setIsLoading] = useState<boolean>(true);\n\n    useEffect(() => {\n        getAllNews();\n    }, []);\n\n    const getAllNews = () => {\n        setTimeout(() => {\n            fetch('http://localhost:3000/allNews')\n                .then(response => {\n                    return response.json();\n                })\n                .then(data => {\n                    setNews(\n                        data.map((row: INews) => {\n                            return {\n                                id: row.id,\n                                date: moment(row.date).format('DD.MM.YYYY'),\n                                name: row.name,\n                                content: row.content\n                            }\n                        })\n                    );\n                    setIsLoading(false);\n                });\n        }, 3000);\n\n    }\n\n    return (\n        <div className=\"padding\">\n            <h1 className=\"mainLabel\">Novinky</h1>\n            <News news={news} isLoading={isLoading}/>\n        </div>\n    );\n};\n\nexport default AllNews;"]},"metadata":{},"sourceType":"module"}