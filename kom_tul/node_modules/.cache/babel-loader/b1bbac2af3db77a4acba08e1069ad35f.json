{"ast":null,"code":"var _jsxFileName = \"/Users/aleveha/WebstormProjects/KOM_TUL/kom_tul/src/components/Header/MobileHeader.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useContext } from \"react\";\nimport PathContext from \"../../Context/PathContext\";\nimport AppContentContext from \"../../Context/AppContentContext\";\nimport LanguageContext from \"../../Context/LanguageContext\";\nimport { toast } from \"react-toastify\";\nimport Drawer from '@material-ui/core/Drawer';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport { makeStyles, createStyles } from '@material-ui/core';\nconst useStyles = makeStyles(() => createStyles({\n  list: {\n    padding: 0,\n    margin: 0\n  },\n  divider: {\n    backgroundColor: \"lightgrey\"\n  }\n}));\n\nconst MobileHeader = () => {\n  _s();\n\n  const classes = useStyles();\n  const appContent = useContext(AppContentContext);\n  const path = useContext(PathContext);\n  const language = useContext(LanguageContext);\n\n  const ChangeValue = () => {\n    path.changeValue();\n  };\n\n  const anchor = 'bottom';\n  const [state, setState] = React.useState({\n    bottom: false,\n    right: false\n  });\n\n  const toggleDrawer = (anchor, open) => event => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setState({ ...state,\n      [anchor]: open\n    });\n  };\n\n  const MenuList = anchor => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"menuList\",\n    role: \"presentation\",\n    onClick: toggleDrawer(anchor, false),\n    onKeyDown: toggleDrawer(anchor, false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    className: classes.list,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, appContent.value.map(elem => appContent.value.indexOf(elem) !== 0 && /*#__PURE__*/React.createElement(\"div\", {\n    key: elem.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    className: \"headerTab\",\n    key: appContent.value.indexOf(elem),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: elem.link,\n    className: \"tabName\",\n    onClick: () => ChangeValue(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 33\n    }\n  }, elem.name)), /*#__PURE__*/React.createElement(Divider, {\n    className: classes.divider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(ListItem, {\n    className: \"langButton\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"cng-lang\",\n    onClick: () => {\n      language.changeValue(language.value === 'CZ' ? 'EN' : 'CZ');\n      toast.warn(\"Změna jazyka ještě není k dispozici.\", {\n        autoClose: 3000,\n        position: \"bottom-center\"\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  }, \"EN\"))));\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: toggleDrawer(anchor, true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(MenuIcon, {\n    fontSize: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Drawer, {\n    anchor: anchor,\n    open: state[anchor],\n    onClose: toggleDrawer(anchor, false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }\n  }, MenuList(anchor))));\n};\n\n_s(MobileHeader, \"dcYkQHqCHRI25yBooYv7oh4HnXA=\", false, function () {\n  return [useStyles];\n});\n\n_c = MobileHeader;\nexport default MobileHeader;\n\nvar _c;\n\n$RefreshReg$(_c, \"MobileHeader\");","map":{"version":3,"sources":["/Users/aleveha/WebstormProjects/KOM_TUL/kom_tul/src/components/Header/MobileHeader.tsx"],"names":["React","Link","useContext","PathContext","AppContentContext","LanguageContext","toast","Drawer","Button","List","MenuIcon","ListItem","Divider","makeStyles","createStyles","useStyles","list","padding","margin","divider","backgroundColor","MobileHeader","classes","appContent","path","language","ChangeValue","changeValue","anchor","state","setState","useState","bottom","right","toggleDrawer","open","event","type","key","MenuList","value","map","elem","indexOf","name","link","warn","autoClose","position"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {Link} from 'react-router-dom';\nimport {useContext} from \"react\";\nimport PathContext from \"../../Context/PathContext\";\nimport AppContentContext from \"../../Context/AppContentContext\";\nimport LanguageContext from \"../../Context/LanguageContext\";\nimport {toast} from \"react-toastify\";\nimport Drawer from '@material-ui/core/Drawer';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport {makeStyles, createStyles} from '@material-ui/core';\ntype Anchor = 'bottom' | 'right';\n\nconst useStyles = makeStyles(() =>\n    createStyles({\n        list: {\n            padding: 0,\n            margin: 0\n        },\n        divider: {\n            backgroundColor: \"lightgrey\"\n        }\n    })\n)\n\nconst MobileHeader = () => {\n    const classes = useStyles();\n    const appContent = useContext(AppContentContext);\n    const path = useContext(PathContext);\n    const language = useContext(LanguageContext);\n    const ChangeValue = () => {\n        path.changeValue();\n    }\n\n    const anchor = 'bottom';\n    const [state, setState] = React.useState({\n        bottom: false,\n        right: false\n    });\n\n    const toggleDrawer = (anchor: Anchor, open: boolean) => (\n        event: React.KeyboardEvent | React.MouseEvent,\n    ) => {\n        if (\n            event.type === 'keydown' &&\n            ((event as React.KeyboardEvent).key === 'Tab' ||\n                (event as React.KeyboardEvent).key === 'Shift')\n        ) {\n            return;\n        }\n        setState({...state, [anchor]: open});\n    };\n\n    const MenuList = (anchor: Anchor) => (\n        <div\n            className=\"menuList\"\n            role=\"presentation\"\n            onClick={toggleDrawer(anchor, false)}\n            onKeyDown={toggleDrawer(anchor, false)}\n        >\n            <List className={classes.list}>\n                {appContent.value.map((elem) =>\n                    appContent.value.indexOf(elem) !== 0 && (\n                        <div key={elem.name}>\n                            <ListItem className=\"headerTab\" key={appContent.value.indexOf(elem)}>\n                                <Link to={elem.link} className=\"tabName\" onClick={() => ChangeValue()}>{elem.name}</Link>\n                            </ListItem>\n                            <Divider className={classes.divider}/>\n                        </div>\n                    )\n                )}\n                <ListItem className=\"langButton\">\n                    <p className=\"cng-lang\"\n                       onClick={() => {\n                           language.changeValue(language.value === 'CZ' ? 'EN' : 'CZ');\n                           toast.warn(\"Změna jazyka ještě není k dispozici.\", {\n                               autoClose: 3000,\n                               position: \"bottom-center\"\n                           });\n                       }}>EN{/*language.value !== 'CZ' ? 'CZ' : 'EN'*/}\n                    </p>\n                </ListItem>\n            </List>\n        </div>\n    );\n\n    return (\n        <div>\n            {\n                <React.Fragment>\n                    <Button onClick={toggleDrawer(anchor, true)}>\n                        <MenuIcon fontSize=\"large\" />\n                    </Button>\n                    <Drawer anchor={anchor} open={state[anchor]} onClose={toggleDrawer(anchor, false)}>\n                        {MenuList(anchor)}\n                    </Drawer>\n                </React.Fragment>\n            }\n        </div>\n    );\n}\n\nexport default MobileHeader;"]},"metadata":{},"sourceType":"module"}