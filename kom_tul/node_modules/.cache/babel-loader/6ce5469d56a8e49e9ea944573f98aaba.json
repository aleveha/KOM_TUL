{"ast":null,"code":"var _jsxFileName = \"/Users/aleveha/WebstormProjects/KOM_TUL/kom_tul/src/components/MainContent/AllNews.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport News from \"../Common/News\";\nimport moment from \"moment\";\nimport AddNews from \"../Common/AddNews\";\n\nconst AllNews = () => {\n  _s();\n\n  const [news, setNews] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isLogged, setIsLogged] = useState(false);\n  useEffect(() => {\n    getAllNews();\n  }, []);\n\n  const getAllNews = () => {\n    setIsLoading(true);\n    fetch('http://localhost:3000/allNews').then(response => {\n      return response.json();\n    }).then(data => {\n      setNews(data.map(row => {\n        return {\n          id: row.id,\n          date: moment(row.date).format('DD.MM.YYYY'),\n          name: row.name,\n          content: row.content\n        };\n      }));\n      setIsLoading(false);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"allNews padding\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"mainLabel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, \"Novinky\"), /*#__PURE__*/React.createElement(News, {\n    news: news,\n    isLoading: isLoading,\n    isLogged: isLogged,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(AddNews, {\n    getAllNews: getAllNews,\n    isLogged: isLogged,\n    setIsLogged: setIsLogged,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }));\n};\n\n_s(AllNews, \"22Ga7C6PVKUOu33xYckKUle/tk4=\");\n\n_c = AllNews;\nexport default AllNews;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllNews\");","map":{"version":3,"sources":["/Users/aleveha/WebstormProjects/KOM_TUL/kom_tul/src/components/MainContent/AllNews.tsx"],"names":["React","useEffect","useState","News","moment","AddNews","AllNews","news","setNews","isLoading","setIsLoading","isLogged","setIsLogged","getAllNews","fetch","then","response","json","data","map","row","id","date","format","name","content"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,IAAP,MAA0B,gBAA1B;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,OAAP,MAAoB,mBAApB;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAClB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAe,EAAf,CAAhC;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAU,IAAV,CAA1C;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAU,KAAV,CAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,UAAU;AACb,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,UAAU,GAAG,MAAM;AACrBH,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAI,IAAAA,KAAK,CAAC,+BAAD,CAAL,CACKC,IADL,CACUC,QAAQ,IAAI;AACd,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,KAHL,EAIKF,IAJL,CAIUG,IAAI,IAAI;AACVV,MAAAA,OAAO,CACHU,IAAI,CAACC,GAAL,CAAUC,GAAD,IAAgB;AACrB,eAAO;AACHC,UAAAA,EAAE,EAAED,GAAG,CAACC,EADL;AAEHC,UAAAA,IAAI,EAAElB,MAAM,CAACgB,GAAG,CAACE,IAAL,CAAN,CAAiBC,MAAjB,CAAwB,YAAxB,CAFH;AAGHC,UAAAA,IAAI,EAAEJ,GAAG,CAACI,IAHP;AAIHC,UAAAA,OAAO,EAAEL,GAAG,CAACK;AAJV,SAAP;AAMH,OAPD,CADG,CAAP;AAUAf,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,KAhBL;AAiBH,GAnBD;;AAqBA,sBACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI,oBAAC,IAAD;AACI,IAAA,IAAI,EAAEH,IADV;AAEI,IAAA,SAAS,EAAEE,SAFf;AAGI,IAAA,QAAQ,EAAEE,QAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAOI,oBAAC,OAAD;AACI,IAAA,UAAU,EAAEE,UADhB;AAEI,IAAA,QAAQ,EAAEF,QAFd;AAGI,IAAA,WAAW,EAAEC,WAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,CADJ;AAeH,CA7CD;;GAAMN,O;;KAAAA,O;AA+CN,eAAeA,OAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport News, {INews} from \"../Common/News\";\nimport moment from \"moment\";\nimport AddNews from \"../Common/AddNews\";\n\nconst AllNews = () => {\n    const [news, setNews] = useState<Array<INews>>([]);\n    const [isLoading, setIsLoading] = useState<boolean>(true);\n    const [isLogged, setIsLogged] = useState<boolean>(false);\n\n    useEffect(() => {\n        getAllNews();\n    }, []);\n\n    const getAllNews = () => {\n        setIsLoading(true);\n        fetch('http://localhost:3000/allNews')\n            .then(response => {\n                return response.json();\n            })\n            .then(data => {\n                setNews(\n                    data.map((row: INews) => {\n                        return {\n                            id: row.id,\n                            date: moment(row.date).format('DD.MM.YYYY'),\n                            name: row.name,\n                            content: row.content\n                        }\n                    })\n                );\n                setIsLoading(false);\n            })\n    }\n\n    return (\n        <div className=\"allNews padding\">\n            <h1 className=\"mainLabel\">Novinky</h1>\n            <News\n                news={news}\n                isLoading={isLoading}\n                isLogged={isLogged}\n            />\n            <AddNews\n                getAllNews={getAllNews}\n                isLogged={isLogged}\n                setIsLogged={setIsLogged}\n            />\n        </div>\n    );\n};\n\nexport default AllNews;"]},"metadata":{},"sourceType":"module"}