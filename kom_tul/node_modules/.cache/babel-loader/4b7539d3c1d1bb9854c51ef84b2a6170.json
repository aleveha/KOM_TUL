{"ast":null,"code":"var _jsxFileName = \"/Users/aleveha/WebstormProjects/KOM_TUL/kom_tul/src/components/Header/BigHeader.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport AppContentContext from \"../../Context/AppContentContext\";\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BigHeader = () => {\n  _s();\n\n  const appContent = useContext(AppContentContext);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bigHeader\",\n    children: appContent.value.map(tab => tab.name !== \"KOM\" && /*#__PURE__*/_jsxDEV(Link, {\n      to: tab.link,\n      children: tab.name\n    }, tab.name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 39\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n\n_s(BigHeader, \"yLX1biVgUaBbRnRLTPiXUX4PS8k=\");\n\n_c = BigHeader;\nexport default BigHeader;\n\nvar _c;\n\n$RefreshReg$(_c, \"BigHeader\");","map":{"version":3,"sources":["/Users/aleveha/WebstormProjects/KOM_TUL/kom_tul/src/components/Header/BigHeader.tsx"],"names":["React","useContext","AppContentContext","Link","BigHeader","appContent","value","map","tab","name","link"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,OAAOC,iBAAP,MAA8B,iCAA9B;AACA,SAAQC,IAAR,QAAmB,kBAAnB;;;AAGA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACpB,QAAMC,UAAU,GAAGJ,UAAU,CAACC,iBAAD,CAA7B;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,cACKG,UAAU,CAACC,KAAX,CAAiBC,GAAjB,CAAqBC,GAAG,IACrBA,GAAG,CAACC,IAAJ,KAAa,KAAb,iBAAsB,QAAC,IAAD;AAAM,MAAA,EAAE,EAAED,GAAG,CAACE,IAAd;AAAA,gBAAoCF,GAAG,CAACC;AAAxC,OAAyBD,GAAG,CAACC,IAA7B;AAAA;AAAA;AAAA;AAAA,YADzB;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CAVD;;GAAML,S;;KAAAA,S;AAYN,eAAeA,SAAf","sourcesContent":["import React, {useContext} from 'react';\nimport AppContentContext from \"../../Context/AppContentContext\";\nimport {Link} from 'react-router-dom';\n\n\nconst BigHeader = () => {\n    const appContent = useContext(AppContentContext);\n\n    return (\n        <div className=\"bigHeader\">\n            {appContent.value.map(tab =>\n                tab.name !== \"KOM\" && <Link to={tab.link} key={tab.name}>{tab.name}</Link>\n            )}\n        </div>\n    );\n};\n\nexport default BigHeader;"]},"metadata":{},"sourceType":"module"}