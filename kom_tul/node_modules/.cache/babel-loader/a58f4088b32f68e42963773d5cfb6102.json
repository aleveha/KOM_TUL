{"ast":null,"code":"var _jsxFileName = \"/Users/aleveha/WebstormProjects/KOM_TUL/kom_tul/src/components/Common/InputNewsForm.tsx\";\nimport { Button, TextField } from \"@material-ui/core\";\nimport React from \"react\";\nimport { Formik, Form } from 'formik';\nimport * as yup from 'yup';\nconst InputNewsSchema = yup.object().shape({\n  name: yup.string().min(3, \"Too short\").max(250, \"Too long\").required(),\n  content: yup.string().min(3, \"Too short\").max(3000, \"Too long\").required()\n});\n\nconst InputNewsForm = props => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inputContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: props.news,\n    validationSchema: InputNewsSchema,\n    onSubmit: (values, actions) => {\n      console.log(values); // props.setNews(values);\n\n      actions.setSubmitting(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, props => {\n    const {\n      values,\n      touched,\n      errors,\n      handleBlur,\n      handleChange\n    } = props;\n    return /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"titleSecond\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 29\n      }\n    }, \"Nazev novinky\"), /*#__PURE__*/React.createElement(TextField, {\n      type: \"text\",\n      fullWidth: true,\n      variant: \"outlined\",\n      size: \"small\",\n      value: values.name,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      helperText: errors.name && touched.name && errors.name,\n      error: !!(errors.name && touched.name),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"titleSecond\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 29\n      }\n    }, \"Obsah novinky\"), /*#__PURE__*/React.createElement(TextField, {\n      type: \"text\",\n      fullWidth: true,\n      variant: \"outlined\",\n      size: \"small\",\n      multiline: true,\n      value: values.content,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      helperText: errors.content && touched.content && errors.content,\n      error: !!(errors.content && touched.content),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      variant: \"contained\",\n      style: {\n        margin: \"0.5rem\",\n        color: \"var(--blue)\"\n      },\n      color: \"default\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 29\n      }\n    }, \"Nahrat\"));\n  }));\n};\n\n_c = InputNewsForm;\nexport default InputNewsForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputNewsForm\");","map":{"version":3,"sources":["/Users/aleveha/WebstormProjects/KOM_TUL/kom_tul/src/components/Common/InputNewsForm.tsx"],"names":["Button","TextField","React","Formik","Form","yup","InputNewsSchema","object","shape","name","string","min","max","required","content","InputNewsForm","props","news","values","actions","console","log","setSubmitting","touched","errors","handleBlur","handleChange","margin","color"],"mappings":"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","sourcesContent":["import {Button, TextField} from \"@material-ui/core\";\nimport React from \"react\";\nimport {\n    Formik,\n    FormikProps,\n    Form,\n} from 'formik';\nimport * as yup from 'yup';\nimport {INews} from \"./News\";\n\nconst InputNewsSchema = yup.object().shape({\n    name: yup.string().min(3, \"Too short\").max(250, \"Too long\").required(),\n    content: yup.string().min(3, \"Too short\").max(3000, \"Too long\").required()\n});\n\nconst InputNewsForm = (props: { news: INews, setNews: (value: INews) => void }) => {\n    return (\n        <div className=\"inputContainer\">\n            <Formik\n                initialValues={props.news}\n                validationSchema={InputNewsSchema}\n                onSubmit={(values: INews, actions) => {\n                    console.log(values);\n                    // props.setNews(values);\n                    actions.setSubmitting(false);\n                }}\n            >\n                {(props: FormikProps<INews>) => {\n                    const {\n                        values,\n                        touched,\n                        errors,\n                        handleBlur,\n                        handleChange,\n                    } = props;\n                    return (\n                        <Form>\n                            <p className=\"titleSecond\">Nazev novinky</p>\n                            <TextField\n                                type=\"text\"\n                                fullWidth={true}\n                                variant=\"outlined\"\n                                size=\"small\"\n                                value={values.name}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                helperText={errors.name && touched.name && errors.name}\n                                error={!!(errors.name && touched.name)}\n                            />\n\n                            <p className=\"titleSecond\">Obsah novinky</p>\n                            <TextField\n                                type=\"text\"\n                                fullWidth={true}\n                                variant=\"outlined\"\n                                size=\"small\"\n                                multiline={true}\n                                value={values.content}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                helperText={errors.content && touched.content && errors.content}\n                                error={!!(errors.content && touched.content)}\n                            />\n\n                            <Button\n                                type=\"submit\"\n                                variant=\"contained\"\n                                style={{margin: \"0.5rem\", color: \"var(--blue)\"}}\n                                color=\"default\"\n                            >Nahrat</Button>\n                        </Form>\n                    );\n                }}\n            </Formik>\n        </div>\n    );\n}\n\nexport default InputNewsForm;"]},"metadata":{},"sourceType":"module"}