{"ast":null,"code":"var _jsxFileName = \"/Users/aleveha/WebstormProjects/KOM_TUL/kom_tul/src/components/MainContent/AllNews.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport News from \"../Common/News\";\nimport moment from \"moment\";\nimport { VpnKey } from \"@material-ui/icons\";\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, TextField } from \"@material-ui/core\";\nimport { Formik, Form, Field } from 'formik';\n\nconst AllNews = () => {\n  _s();\n\n  const [news, setNews] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    getAllNews();\n  }, []);\n\n  const getAllNews = () => {\n    fetch('http://localhost:3000/allNews').then(response => {\n      return response.json();\n    }).then(data => {\n      setNews(data.map(row => {\n        return {\n          id: row.id,\n          date: moment(row.date).format('DD.MM.YYYY'),\n          name: row.name,\n          content: row.content\n        };\n      }));\n      setIsLoading(false);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"allNews padding\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"mainLabel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, \"Novinky\"), /*#__PURE__*/React.createElement(News, {\n    news: news,\n    isLoading: isLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(AddNews, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }));\n};\n\n_s(AllNews, \"4kuymrl1OoUkHJbIYZCODUAtIUQ=\");\n\n_c = AllNews;\n\nconst AddNews = () => {\n  _s2();\n\n  const [openDialog, setOpenDialog] = useState(false);\n  const [user, setUser] = useState({\n    login: \"\",\n    password: \"\"\n  });\n  const [isLogged, setIsLogged] = useState(false);\n\n  const handleDialogOpen = () => {\n    setOpenDialog(!openDialog);\n  };\n\n  const login = () => {\n    fetch('http://localhost:3000/checkUser', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(user)\n    }).then(response => response.json()).then(data => {\n      console.log(data);\n      setIsLogged(data);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"addNews\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    style: {\n      backgroundColor: \"white\",\n      color: \"var(--fiolet)\"\n    },\n    onClick: handleDialogOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(VpnKey, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(Dialog, {\n    open: openDialog,\n    onClose: handleDialogOpen,\n    className: \"dialog addNewsDialog\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }, \"Pridat dalsi novinku\"), /*#__PURE__*/React.createElement(DialogContent, {\n    className: \"dialogContent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }, isLogged ? /*#__PURE__*/React.createElement(InputNews, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 33\n    }\n  }) : /*#__PURE__*/React.createElement(LoginForm, {\n    user: user,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 49\n    }\n  })), /*#__PURE__*/React.createElement(DialogActions, {\n    className: \"buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: login,\n    variant: \"contained\",\n    style: {\n      margin: \"0.5rem\",\n      color: \"var(--blue)\"\n    },\n    color: \"default\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 25\n    }\n  }, \"Vstopit\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleDialogOpen,\n    variant: \"contained\",\n    style: {\n      margin: \"0.5rem\",\n      color: \"var(--blue)\"\n    },\n    color: \"default\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 21\n    }\n  }, \"Zavrit\"))));\n};\n\n_s2(AddNews, \"ClTx9Pb3BRwGcbsf72ghxLKKht0=\");\n\n_c2 = AddNews;\n\nconst InputNews = () => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inputContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"titleSecond\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 17\n    }\n  }, \"Nazev novinky\"), /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    variant: \"outlined\",\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"titleSecond\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 17\n    }\n  }, \"Obsah novinky\"), /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    variant: \"outlined\",\n    size: \"small\",\n    multiline: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 17\n    }\n  })));\n};\n\n_c3 = InputNews;\n\nconst LoginForm = props => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"loginContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      login: \"\",\n      password: \"\"\n    },\n    onSubmit: (values, {\n      setSubmitting\n    }) => {\n      // setTimeout(() => {\n      alert(JSON.stringify(values, null, 2));\n      setSubmitting(false); // }, 500);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"titleSecond\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 21\n    }\n  }, \"First Name\"), /*#__PURE__*/React.createElement(Field, {\n    name: \"login\" // fullWidth={true}\n    // variant=\"outlined\"\n    // size=\"small\"\n    // multiline={true}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"titleSecond\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 21\n    }\n  }, \"First Name\"), /*#__PURE__*/React.createElement(Field, {\n    name: \"password\" // fullWidth={true}\n    // variant=\"outlined\"\n    // size=\"small\"\n    // multiline={true}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    variant: \"contained\",\n    style: {\n      margin: \"0.5rem\",\n      color: \"var(--blue)\"\n    },\n    color: \"default\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 21\n    }\n  }, \"Submit\"))));\n};\n\n_c4 = LoginForm;\nexport default AllNews;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"AllNews\");\n$RefreshReg$(_c2, \"AddNews\");\n$RefreshReg$(_c3, \"InputNews\");\n$RefreshReg$(_c4, \"LoginForm\");","map":{"version":3,"sources":["/Users/aleveha/WebstormProjects/KOM_TUL/kom_tul/src/components/MainContent/AllNews.tsx"],"names":["React","useEffect","useState","News","moment","VpnKey","Button","Dialog","DialogActions","DialogContent","DialogTitle","TextField","Formik","Form","Field","AllNews","news","setNews","isLoading","setIsLoading","getAllNews","fetch","then","response","json","data","map","row","id","date","format","name","content","AddNews","openDialog","setOpenDialog","user","setUser","login","password","isLogged","setIsLogged","handleDialogOpen","method","headers","body","JSON","stringify","console","log","backgroundColor","color","margin","InputNews","LoginForm","props","values","setSubmitting","alert"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport News, {INews} from \"../Common/News\";\nimport moment from \"moment\";\nimport {VpnKey} from \"@material-ui/icons\";\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    TextField\n} from \"@material-ui/core\";\nimport {\n    Formik,\n    FormikHelpers,\n    FormikProps,\n    Form,\n    Field,\n    FieldProps,\n} from 'formik';\n\nconst AllNews = () => {\n    const [news, setNews] = useState<Array<INews>>([]);\n    const [isLoading, setIsLoading] = useState<boolean>(true);\n\n    useEffect(() => {\n        getAllNews();\n    }, []);\n\n    const getAllNews = () => {\n        fetch('http://localhost:3000/allNews')\n            .then(response => {\n                return response.json();\n            })\n            .then(data => {\n                setNews(\n                    data.map((row: INews) => {\n                        return {\n                            id: row.id,\n                            date: moment(row.date).format('DD.MM.YYYY'),\n                            name: row.name,\n                            content: row.content\n                        }\n                    })\n                );\n                setIsLoading(false);\n            })\n    }\n\n    return (\n        <div className=\"allNews padding\">\n            <h1 className=\"mainLabel\">Novinky</h1>\n            <News news={news} isLoading={isLoading}/>\n            <AddNews/>\n        </div>\n    );\n};\n\ninterface IUser {\n    login: string,\n    password: string\n}\n\nconst AddNews = () => {\n    const [openDialog, setOpenDialog] = useState<boolean>(false);\n    const [user, setUser] = useState<IUser>({login: \"\", password: \"\"});\n    const [isLogged, setIsLogged] = useState<boolean>(false);\n\n    const handleDialogOpen = () => {\n        setOpenDialog(!openDialog);\n    }\n\n    const login = () => {\n        fetch('http://localhost:3000/checkUser', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(user),\n        })\n            .then(response => response.json())\n            .then(data => {\n                console.log(data);\n                setIsLogged(data);\n            });\n    }\n\n    return (\n        <div className=\"addNews\">\n            <div>\n                <Button\n                    style={{backgroundColor: \"white\", color: \"var(--fiolet)\"}}\n                    onClick={handleDialogOpen}\n                >\n                    <VpnKey/>\n                </Button>\n            </div>\n            <Dialog open={openDialog} onClose={handleDialogOpen} className=\"dialog addNewsDialog\">\n                <DialogTitle>Pridat dalsi novinku</DialogTitle>\n                <DialogContent className=\"dialogContent\">\n                    {isLogged ? <InputNews /> : <LoginForm user={user}/>}\n                </DialogContent>\n                <DialogActions className=\"buttons\">\n\n\n                    {\n                        <Button\n                            onClick={login}\n                            variant=\"contained\"\n                            style={{margin: \"0.5rem\", color: \"var(--blue)\"}}\n                            color=\"default\"\n                        >Vstopit</Button>\n                    }\n\n\n                    <Button\n                        onClick={handleDialogOpen}\n                        variant=\"contained\"\n                        style={{margin: \"0.5rem\", color: \"var(--blue)\"}}\n                        color=\"default\"\n                    >Zavrit</Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n};\n\nconst InputNews = () => {\n    return (\n        <div className=\"inputContainer\">\n            <div>\n                <p className=\"titleSecond\">Nazev novinky</p>\n                <TextField\n                    fullWidth={true}\n                    variant=\"outlined\"\n                    size=\"small\"\n                />\n            </div>\n            <div>\n                <p className=\"titleSecond\">Obsah novinky</p>\n                <TextField\n                    fullWidth={true}\n                    variant=\"outlined\"\n                    size=\"small\"\n                    multiline={true}\n                />\n            </div>\n        </div>\n    );\n}\n\nconst LoginForm = (props: {user: IUser}) => {\n    return (\n        <div className=\"loginContainer\">\n            <Formik\n                initialValues={{\n                    login: \"\",\n                    password: \"\"\n                }}\n                onSubmit={(\n                    values: IUser,\n                    { setSubmitting }: FormikHelpers<IUser>\n                ) => {\n                    // setTimeout(() => {\n                        alert(JSON.stringify(values, null, 2));\n                        setSubmitting(false);\n                    // }, 500);\n                }}\n            >\n                <Form>\n                    <p className=\"titleSecond\">First Name</p>\n                    <Field\n                        name=\"login\"\n                        // fullWidth={true}\n                        // variant=\"outlined\"\n                        // size=\"small\"\n                        // multiline={true}\n                    />\n\n                    <p className=\"titleSecond\">First Name</p>\n                    <Field\n                        name=\"password\"\n                        // fullWidth={true}\n                        // variant=\"outlined\"\n                        // size=\"small\"\n                        // multiline={true}\n                    />\n\n                    <Button\n                        type=\"submit\"\n                        variant=\"contained\"\n                        style={{margin: \"0.5rem\", color: \"var(--blue)\"}}\n                        color=\"default\"\n                    >Submit</Button>\n                </Form>\n            </Formik>\n        </div>\n    );\n}\n\nexport default AllNews;"]},"metadata":{},"sourceType":"module"}