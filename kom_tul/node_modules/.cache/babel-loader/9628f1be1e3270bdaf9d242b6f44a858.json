{"ast":null,"code":"var _jsxFileName = \"/Users/aleveha/WebstormProjects/KOM_TUL/kom_tul/src/components/Common/LoginForm.tsx\";\nimport { Formik, Form } from 'formik';\nimport * as yup from 'yup';\nimport { Button, CircularProgress, TextField } from \"@material-ui/core\";\nimport React from \"react\";\nconst LoginSchema = yup.object().shape({\n  login: yup.string().min(3, \"Too short\").max(200, \"Too long\").required(\"Required\"),\n  password: yup.string().min(3, \"Too short\").max(200, \"Too long\").required(\"Required\")\n});\n\nconst LoginForm = props => {\n  const login = () => {\n    return new Promise(resolve => {\n      fetch('http://localhost:3000/checkUser', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(props.user)\n      }).then(response => response.json()).then(data => resolve(data));\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"loginContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: props.user,\n    validationSchema: LoginSchema,\n    onSubmit: (values, actions) => {\n      login().then(res => {\n        console.log(res);\n\n        if (res) {\n          props.setUser(values);\n          props.setIsLogged(true);\n        }\n\n        actions.setSubmitting(false);\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, props => {\n    const {\n      values,\n      touched,\n      errors,\n      handleBlur,\n      handleChange,\n      isSubmitting\n    } = props;\n    return /*#__PURE__*/React.createElement(Form, {\n      className: \"form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"titleSecond\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 29\n      }\n    }, \"Uzivatelske jmeno\"), /*#__PURE__*/React.createElement(TextField, {\n      type: \"text\",\n      name: \"login\",\n      fullWidth: true,\n      variant: \"outlined\",\n      size: \"small\",\n      value: values.login,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      helperText: errors.login && touched.login && errors.login,\n      error: !!(errors.login && touched.login),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"titleSecond\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 29\n      }\n    }, \"Heslo\"), /*#__PURE__*/React.createElement(TextField, {\n      type: \"text\",\n      name: \"password\",\n      fullWidth: true,\n      variant: \"outlined\",\n      size: \"small\",\n      value: values.password,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      helperText: errors.password && touched.password && errors.password,\n      error: !!(errors.password && touched.password),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 29\n      }\n    }), isSubmitting ? /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        margin: \"2rem 0\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(CircularProgress, {\n      size: 50,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 37\n      }\n    })) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"buttons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      variant: \"contained\",\n      style: {\n        margin: \"0.5rem\",\n        color: \"var(--blue)\"\n      },\n      color: \"default\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 37\n      }\n    }, \"Vstopit\")));\n  }));\n};\n\n_c = LoginForm;\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/Users/aleveha/WebstormProjects/KOM_TUL/kom_tul/src/components/Common/LoginForm.tsx"],"names":["Formik","Form","yup","Button","CircularProgress","TextField","React","LoginSchema","object","shape","login","string","min","max","required","password","LoginForm","props","Promise","resolve","fetch","method","headers","body","JSON","stringify","user","then","response","json","data","values","actions","res","console","log","setUser","setIsLogged","setSubmitting","touched","errors","handleBlur","handleChange","isSubmitting","display","justifyContent","alignItems","margin","color"],"mappings":"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","sourcesContent":["import {\n    Formik,\n    FormikProps,\n    Form,\n} from 'formik';\nimport * as yup from 'yup';\nimport {Button, CircularProgress, TextField} from \"@material-ui/core\";\nimport React, {useEffect} from \"react\";\nimport {IUser} from \"../MainContent/AllNews\";\n\nconst LoginSchema = yup.object().shape({\n    login: yup.string().min(3, \"Too short\").max(200, \"Too long\").required(\"Required\"),\n    password: yup.string().min(3, \"Too short\").max(200, \"Too long\").required(\"Required\")\n});\n\nconst LoginForm = (props: {\n    user: IUser,\n    setUser: (value: IUser) => void,\n    isLogged: boolean,\n    setIsLogged: (value: boolean) => void\n}) => {\n\n    const login = () => {\n        return new Promise(((resolve) => {\n            fetch('http://localhost:3000/checkUser', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(props.user),\n            })\n                .then(response => response.json())\n                .then(data => resolve(data));\n        }))\n    }\n\n    return (\n        <div className=\"loginContainer\">\n            <Formik\n                initialValues={props.user}\n                validationSchema={LoginSchema}\n                onSubmit={(\n                    values: IUser,\n                    actions\n                ) => {\n                    login().then(res => {\n                        console.log(res);\n                        if (res) {\n                            props.setUser(values);\n                            props.setIsLogged(true);\n                        }\n                        actions.setSubmitting(false);\n                    })\n                }}\n            >\n                {(props: FormikProps<IUser>) => {\n                    const {\n                        values,\n                        touched,\n                        errors,\n                        handleBlur,\n                        handleChange,\n                        isSubmitting\n                    } = props;\n                    return (\n                        <Form className=\"form\">\n                            <p className=\"titleSecond\">Uzivatelske jmeno</p>\n                            <TextField\n                                type=\"text\"\n                                name=\"login\"\n                                fullWidth={true}\n                                variant=\"outlined\"\n                                size=\"small\"\n                                value={values.login}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                helperText={errors.login && touched.login && errors.login}\n                                error={!!(errors.login && touched.login)}\n                            />\n\n                            <p className=\"titleSecond\">Heslo</p>\n                            <TextField\n                                type=\"text\"\n                                name=\"password\"\n                                fullWidth={true}\n                                variant=\"outlined\"\n                                size=\"small\"\n                                value={values.password}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                helperText={errors.password && touched.password && errors.password}\n                                error={!!(errors.password && touched.password)}\n                            />\n\n                            {isSubmitting ?\n                                <div style={{\n                                    display: \"flex\",\n                                    justifyContent: \"center\",\n                                    alignItems: \"center\",\n                                    margin: \"2rem 0\"\n                                }}>\n                                    <CircularProgress size={50}/>\n                                </div> :\n                                <div className=\"buttons\">\n                                    <Button\n                                        type=\"submit\"\n                                        variant=\"contained\"\n                                        style={{margin: \"0.5rem\", color: \"var(--blue)\"}}\n                                        color=\"default\"\n                                    >Vstopit</Button>\n                                </div>}\n                        </Form>\n                    );\n                }}\n            </Formik>\n        </div>\n    );\n}\n\nexport default LoginForm;"]},"metadata":{},"sourceType":"module"}