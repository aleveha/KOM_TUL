{"ast":null,"code":"var _jsxFileName = \"/Users/aleveha/WebstormProjects/KOM_TUL/kom_tul/src/components/Header/BigHeader.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport AppContentContext from \"../../Context/AppContentContext\";\nimport { Link } from 'react-router-dom';\n\nconst BigHeader = () => {\n  _s();\n\n  const appContent = useContext(AppContentContext);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bigHeader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  }, appContent.value.map(tab => tab.name !== \"KOM\" && /*#__PURE__*/React.createElement(Link, {\n    to: tab.link,\n    key: tab.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 39\n    }\n  }, tab.name)));\n};\n\n_s(BigHeader, \"yLX1biVgUaBbRnRLTPiXUX4PS8k=\");\n\n_c = BigHeader;\nexport default BigHeader;\n\nvar _c;\n\n$RefreshReg$(_c, \"BigHeader\");","map":{"version":3,"sources":["/Users/aleveha/WebstormProjects/KOM_TUL/kom_tul/src/components/Header/BigHeader.tsx"],"names":["React","useContext","AppContentContext","Link","BigHeader","appContent","value","map","tab","name","link"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,OAAOC,iBAAP,MAA8B,iCAA9B;AACA,SAAQC,IAAR,QAAmB,kBAAnB;;AAGA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACpB,QAAMC,UAAU,GAAGJ,UAAU,CAACC,iBAAD,CAA7B;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKG,UAAU,CAACC,KAAX,CAAiBC,GAAjB,CAAqBC,GAAG,IACrBA,GAAG,CAACC,IAAJ,KAAa,KAAb,iBAAsB,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAED,GAAG,CAACE,IAAd;AAAoB,IAAA,GAAG,EAAEF,GAAG,CAACC,IAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoCD,GAAG,CAACC,IAAxC,CADzB,CADL,CADJ;AAOH,CAVD;;GAAML,S;;KAAAA,S;AAYN,eAAeA,SAAf","sourcesContent":["import React, {useContext} from 'react';\nimport AppContentContext from \"../../Context/AppContentContext\";\nimport {Link} from 'react-router-dom';\n\n\nconst BigHeader = () => {\n    const appContent = useContext(AppContentContext);\n\n    return (\n        <div className=\"bigHeader\">\n            {appContent.value.map(tab =>\n                tab.name !== \"KOM\" && <Link to={tab.link} key={tab.name}>{tab.name}</Link>\n            )}\n        </div>\n    );\n};\n\nexport default BigHeader;"]},"metadata":{},"sourceType":"module"}